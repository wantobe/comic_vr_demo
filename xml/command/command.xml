<!--动态漫画中的动画库-->
<krpano>
	<!--
	描述：清除动漫画布中的hotspot
	-->
	<action name="clear_hotspot_of_canvas">
		loop_all_hotspots();
	</action>
	
	<action name="loop_all_hotspots">
		sub(i,hotspot.count,1);
		loop_all_hotspots_next(get(i));
	</action>

	<action name="loop_all_hotspots_next">
		indexoftxt(index,get(hotspot[get(i)].name),'canvas');
		if(index EQ 0,removehotspot(%1););
		<!--trace(%0,' i = ',i);-->
		dec(i);
		if(i GE 0, loop_all_hotspots_next(get(i)) );
	</action>
	
	
	  <!--描述：根据图片生成hotspot
	 	name hotspot 名称
	 	url 图片参数
	 	-->
	<action name="buildHotspot_Img">
		addhotspot(%1);
		set(hotspot[%1].distorted,true);
		set(hotspot[%1].depth,2000);
		set(hotspot[%1].zorder,2);
		set(hotspot[%1].visible,false);
		set(hotspot[%1].edge,center);
		set(hotspot[%1].url,%2);
	</action>
	
	
	<action name="buildHotspot_mask">
		set(mask_is_onver,false);
		addhotspot("canvas_mask");
		set(hotspot[canvas_mask].distorted,true);
		set(hotspot[canvas_mask].depth,2000);
		set(hotspot[canvas_mask].zorder,8);
		set(hotspot[canvas_mask].visible,true);
		set(hotspot[canvas_mask].edge,center);
		set(hotspot[canvas_mask].onover,set(mask_is_onver,true));
		set(hotspot[canvas_mask].onout,center,set(mask_is_onver,false));
		set(hotspot[canvas_mask].url,%SWFPATH%/img/mask.png);
	</action>
	
</krpano>